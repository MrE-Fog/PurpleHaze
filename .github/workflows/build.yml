name: Build
on:
  push:
    branches:
      - 'main'
      - 'dev'
    tags-ignore:
      - '**'
    paths-ignore:
      - 'LICENSE'
      - '**.md'
  pull_request:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      test_release:
        description: 'Test release?'
        required: true
        default: 'false'

jobs:
  build-ios:
    name: Build IPA
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        run: xcodebuild archive -archivePath PurpleHaze -scheme "Purple Haze" -configuration Release CODE_SIGNING_ALLOWED=NO
      - name: Fake Sign
        run: |
          sed 's/$(PRODUCT_BUNDLE_PREFIX:default=com.osy86)/com.osy86/g' PurpleHaze/PurpleHaze.entitlements > PurpleHaze.entitlements
          sed 's/$(PRODUCT_BUNDLE_PREFIX:default=com.osy86)/com.osy86/g' Extension/Iodine.entitlements > Iodine.entitlements
          codesign --force --sign - --entitlements "Iodine.entitlements" --timestamp=none "PurpleHaze.xcarchive/Products/Applications/Purple Haze.app/PlugIns/Iodine.appex"
          codesign --force --sign - --entitlements "PurpleHaze.entitlements" --timestamp=none "PurpleHaze.xcarchive/Products/Applications/Purple Haze.app"
      - name: Compress
        run: tar cf PurpleHaze.xcarchive.tgz PurpleHaze.xcarchive
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: PurpleHaze
          path: PurpleHaze.xcarchive.tgz
  package-ipa:
    name: Package IPA
    runs-on: ubuntu-20.04
    needs: build-ios
    if: github.event_name == 'release' || github.event.inputs.test_release == 'true'
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: PurpleHaze
      - name: Package IPA
        run: |
          tar xf PurpleHaze.xcarchive.tgz
          mv PurpleHaze.xcarchive/Products/Applications Payload
          zip -r PurpleHaze.ipa Payload -x "._*" -x ".DS_Store" -x "__MACOSX"
      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: PurpleHaze.ipa
          asset_name: PurpleHaze.ipa
          asset_content_type: application/octet-stream
      - name: Send Dispatch Event
        if: github.event_name == 'release'
        continue-on-error: true
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ secrets.DISPATCH_ALTSTORE_REPO_NAME }}
          event-type: new-release
